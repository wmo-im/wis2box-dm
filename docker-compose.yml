version: '3.3'

services:
  web-proxy:
    container_name: nginx
    image: nginx:alpine
    restart: always
    env_file:
      - default.env
    ports:
      - 80:80
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    logging:
      options:
        max-size: "10M"
        max-file: "2"

  redis:
    container_name: redis
    build:
      context: ./containers/redis
      dockerfile: Dockerfile
    ports:
      - 6379:6379
    logging:
      options:
        max-size: "10M"
        max-file: "2"

  database:
    build:
      context: .
      dockerfile: ./containers/postgresql/Dockerfile
    container_name: wis2box-dm-db
    ports:
      - 5432:5432
    env_file:
      - default.env
    volumes:
      - "./:/local/app"
      - "./pg_data:/var/lib/postgresql/data"
    logging:
      options:
        max-size: "10M"
        max-file: "2"
  # container for pygeoapi, everything as a process
  api:
    build:
      context: ./containers/pygeoapi/
      dockerfile: Dockerfile
    container_name: wis2box-dm-api
    env_file:
      - default.env
    ports:
      - 5001:5001
    volumes:
      - ./config/pygeoapi:/config
      - ./data/pygeoapi:/data # ToDo - fix paths
      - ./tmp/pygeoapi:/tmp # ToDo - fix paths
      - ./app:/app
    tty: true
    logging:
      options:
        max-size: "10M"
        max-file: "2"
#  entrypoint: ["wis2box-dm","api","serve"]

  subscription_manager:
    container_name: subscription_manager
    build:
      context: .
      dockerfile: ./containers/subscription_manager/Dockerfile
    ports:
      - 5002:5001
    user: 1001:1001
    env_file:
      - default.env
    environment:
      - DATA=/data
    volumes:
      - "./downloads/:/data"
      - "./:/local/app"
    tty: true
    depends_on:
      - redis
    logging:
      options:
        max-size: "10M"
        max-file: "2"
  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./containers/celery/Dockerfile
    volumes:
      - ./downloads/:/data
      - ./:/local
    env_file:
      - default.env
    environment:
      - DATA=/data
    tty: true
    depends_on:
      - redis
    logging:
      options:
        max-size: "10M"
        max-file: "2"
  tileserver:
    image: pramsey/pg_tileserv:20240312
    container_name: tileserver
    env_file:
      - default.env
    depends_on:
      - database
    ports:
      - 7800:7800
    entrypoint: "./pg_tileserv --debug"
    volumes:
      - ./config/pg_tileserv:/config
    logging:
      options:
        max-size: "10M"
        max-file: "2"
  # Message broker for publishing WIS2 notifications
  # and internal message bus
  #broker:
  #  build:
  #    context: .
  #    dockerfile: ./containers/mosquitto/Dockerfile
  #  container_name: wis2box-dm-broker
  #  env_file:
  #    - default.env
  #  ports:
  #    - "1883:1883"
  #  volumes:
  #    - ./config/mosquitto:/mosquitto/config
  #bucket:
  #  build:
  #    context: .
  #    dockerfile: ./containers/minio/Dockerfile
  #  container_name: wis2box-dm-bucket
  #  ports:
  #    - "9000:9000"
  #    - "9001:9001"##

  # container with login to manage cron jobs etc
  manager:
    build:
      context: .
      dockerfile: ./containers/ubuntu/Dockerfile
    container_name: wis2box-dm-manager
    volumes:
      - "./:/local/app"
    env_file:
      - default.env
    tty: true
    logging:
      options:
        max-size: "10M"
        max-file: "2"
  #proxy:
  #  build:
  #    context: .
  #    dockerfile: ./containers/nginx/Dockerfile
  #  container_name: wis2box-dm-proxy
  #auth:
  #  build:
  #    context: .
  #    dockerfile: ./containers/keycloak/Dockerfile
  #  container_name: wis2box-dm-auth
  #django:
  #  build:
  #    context: .
  #    dockerfile: ./containers/django/Dockerfile
  #  command: python3 manage.py runserver 0.0.0.0:8000
  #  volumes:
  #    - .:/code
  #  ports:
  #    - 8000:8000
  #  env_file:
  #    default.env
  #  depends_on:
  #    - db
